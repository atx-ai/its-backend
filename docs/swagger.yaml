definitions:
  model.Comment:
    properties:
      comment_id:
        type: integer
      commented_by:
        description: user name who puts comment
        type: string
      created_on:
        description: comment created on
        type: string
      description:
        description: commnet description
        type: string
      issue_id:
        description: ID fo the issue for which addec comment
        type: integer
    type: object
  model.Issue:
    description: Issue Structure
    properties:
      assigned_to:
        description: name of assignee of the issue
        type: string
      category:
        description: issue category
        type: string
      created_by:
        description: name of user who creates issue
        type: string
      created_on:
        description: issue created date
        type: string
      eta:
        description: time whne issue will be fixed
        type: string
      issue_description:
        description: issue descriptiom
        type: string
      issue_id:
        type: integer
      priority:
        description: issue prioroty
        type: string
      state:
        description: issue state
        type: string
      tags:
        description: tags to filter issue
        items:
          type: string
        type: array
      updated_on:
        description: issue updated time
        type: string
    type: object
info:
  contact: {}
paths:
  /issues:
    get:
      description: Get a list of all issues
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Issue'
            type: array
      summary: List all issues
    post:
      consumes:
      - application/json
      description: Create a new issue
      parameters:
      - description: Issue object to be created
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/model.Issue'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Issue'
      summary: Create a new issue
  /issues/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an issue by its ID
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete an issue by ID
    get:
      consumes:
      - application/json
      description: Get an issue by its ID
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Issue'
      summary: Get an issue by ID
    patch:
      consumes:
      - application/json
      description: Update specific fields of an existing issue
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Fields to be updated
        in: body
        name: updateRequest
        required: true
        schema:
          $ref: '#/definitions/model.Issue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Issue'
      summary: Update specific fields of an existing issue
    put:
      consumes:
      - application/json
      description: Update an existing issue
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated issue object
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/model.Issue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Issue'
      summary: Update an existing issue
  /issues/{issueID}/comments:
    get:
      description: List all comments associated with a specific issue
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
      summary: List comments for a specific issue
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create a new comment for the specified issue
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: integer
      - description: Comment details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Comment'
      summary: Create a new comment
      tags:
      - comments
  /issues/{issueID}/comments/{id}:
    delete:
      description: Delete a comment by its ID for the specified issue
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      summary: Delete a comment
      tags:
      - comments
    get:
      description: Get a comment by its ID for the specified issue
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Comment'
      summary: Get a comment by ID
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update a comment by its ID for the specified issue
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: integer
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated comment details
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update a comment
      tags:
      - comments
swagger: "2.0"
