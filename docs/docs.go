// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/issues": {
            "get": {
                "description": "Get a list of all issues",
                "produces": [
                    "application/json"
                ],
                "summary": "List all issues",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Issue"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new issue",
                "parameters": [
                    {
                        "description": "Issue object to be created",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            }
        },
        "/issues/{id}": {
            "get": {
                "description": "Get an issue by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get an issue by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update an existing issue",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated issue object",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an issue by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete an issue by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update specific fields of an existing issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update specific fields of an existing issue",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to be updated",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Issue"
                        }
                    }
                }
            }
        },
        "/issues/{issueID}/comments": {
            "get": {
                "description": "List all comments associated with a specific issue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "List comments for a specific issue",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "issueID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Comment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new comment for the specified issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create a new comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "issueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment details",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                }
            }
        },
        "/issues/{issueID}/comments/{id}": {
            "get": {
                "description": "Get a comment by its ID for the specified issue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get a comment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "issueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a comment by its ID for the specified issue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "issueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated comment details",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a comment by its ID for the specified issue",
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Issue ID",
                        "name": "issueID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Comment": {
            "type": "object",
            "properties": {
                "comment_id": {
                    "type": "integer"
                },
                "commented_by": {
                    "description": "user name who puts comment",
                    "type": "string"
                },
                "created_on": {
                    "description": "comment created on",
                    "type": "string"
                },
                "description": {
                    "description": "commnet description",
                    "type": "string"
                },
                "issue_id": {
                    "description": "ID fo the issue for which addec comment",
                    "type": "integer"
                }
            }
        },
        "model.Issue": {
            "description": "Issue Structure",
            "type": "object",
            "properties": {
                "assigned_to": {
                    "description": "name of assignee of the issue",
                    "type": "string"
                },
                "category": {
                    "description": "issue category",
                    "type": "string"
                },
                "created_by": {
                    "description": "name of user who creates issue",
                    "type": "string"
                },
                "created_on": {
                    "description": "issue created date",
                    "type": "string"
                },
                "eta": {
                    "description": "time whne issue will be fixed",
                    "type": "string"
                },
                "issue_description": {
                    "description": "issue descriptiom",
                    "type": "string"
                },
                "issue_id": {
                    "type": "integer"
                },
                "priority": {
                    "description": "issue prioroty",
                    "type": "string"
                },
                "state": {
                    "description": "issue state",
                    "type": "string"
                },
                "tags": {
                    "description": "tags to filter issue",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_on": {
                    "description": "issue updated time",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
